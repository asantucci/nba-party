\documentclass[12pt]{article}  

\usepackage{algorithm2e} 
\usepackage{amsmath} 
\usepackage{amsthm} 
\usepackage{amsfonts} 
\usepackage{bbm} 
\usepackage{color,soul} 
\usepackage{framed} 
\usepackage[margin=0.5in]{geometry} 
\usepackage{hyperref} 
\usepackage{mathtools} 
\usepackage[dvipsnames]{xcolor}  

\newtheorem{theorem}{Theorem}[section] 
\newtheorem{lemma}[theorem]{Lemma} 
\newtheorem{proposition}[theorem]{Proposition} 
\newtheorem{corollary}[theorem]{Corollary}  
\newcommand{\D}{\mathrm{d}} 

\DeclarePairedDelimiter{\ceil}{\lceil}{\rceil} 
\DeclarePairedDelimiter{\floor}{\lfloor}{\rfloor}

\SetKwInput{KwInput}{Input} 
\SetKwInput{KwOutput}{Output}  

\begin{document}

\title{\textbf{NBA Party}}
\author{Andreas Santucci, Eric Lax}
\date{April 2017}
\maketitle

<<echo=F,results='hide',messages=F>>=

require(data.table)
require(ggplot2)
require(magrittr)
require(sampling)
set.seed(4052017)

load(file = 'tmp_data/covers_lines.RData')
load(file = 'tmp_data/nmusician_estabs.RData')
load(file = 'tmp_data/population_by_county_year.RData')
musicians <- merge(musicians, pop, by = c('county', 'season'), all.x = T)

@ 

For results, skip to section \ref{seq: significant model}.

\section{Data Sources}

\subsection{Lines data} We obtained data from \href{http://www.covers.com/sports/NBA/matchups?selectedDate=2011-1-01}{Covers.com}, which records the outcome of each game alongside the line set by a betting house.
<<echo=F>>=
lines[, list(date = as.Date(date), team, opponent, line, score)]
@ 

\subsection{BLS data} We also obtained data from
\href{https://www.bls.gov/data/}{Bureau of Labor Statistics} which records the number of establishments by business type at the county-quarter level. As a 
proxy for how much night-life there is in a city, we look toward the 
number of sound recording studios, musical groups, and music publishers there 
are for a particular county-year: we simply calculate the average number of establishments across all three music categories listed above.\footnote{We caveat that since the Toronto Raptors are located in Canada, we don't have BLS data for this team.}

<<echo=F,results='hide'>>=
musicians[, county := gsub(' (county)|(division),.*$', '', county, ignore.case = T)]
@ 

We then merge this in with our lines data, taking care to do so according to each season-team's last game location; we also lag our BLS data by one year.
To this data, we've created features such as 
the number of days since last game, the last game location, the travel distance, and
average age\footnote{We use $\log \textrm{\# days old}$, at the time the game is played.}. Our data range from 2010-2011 season through present, which includes part of the 2016-2017 season.


<<echo=F>>=
### Merge lines data with BLS data.
lines <- merge(lines, musicians,
               by.x = c('season', 'last.game.loc'),
               by.y = c('season', 'team'), all.x = T)

setkey(lines, season, team, date)

## lines[, list(date, team, opponent, location, 
##              line, score, outcome, nhours.lgame, 
##              travel.dist, avg.age, nmusicians)]

@ 

\subsection{Minutes data}
We also gathered minutes data from \href{http://www.espn.com/nba/scoreboard/_/date/}{ESPN}.

<<echo=F>>=
espn <- fread('tmp_data/espn_player_data.csv')
espn[, date := as.Date(date)]
espn[1:5, list(player, mins, reb, ast, stl, pm, pts, date, team)]
@

The minutes data also contain information on the number of free throws, field goals, and
three pointers made and attempted by each player in each game.

\section{Which cities (don't) have nightlife?}

We examine which cities have a notable nightlife, as measured by our proxy;
bottom and top five.

<<echo=F>>= 
musicians[, list(average.nmusicians = mean(nmusicians) %>% round(., digits = 1)),
          by = team][order(average.nmusicians)][c(1:5, 25:29)]
@ 

Los Angeles stands out, as does New York. Some runner ups include Chicago and Miami. 

\subsection{Defining a party variable}

We have a free parameter: the time-window which we believe the hangover effect
to last. Suppose we only look toward games which have been played in a party
city at most 24 hours ago. We take care to ignore
teams playing in their own cities.

<<>>=

HOURS <- 24
lines[, party := ifelse(nhours.lgame <= HOURS & last.game.loc != team, log(nmusicians), 0)]

@

\section{Possible confounders}
What if we pick up effects of a busy play schedule?
Aside from accounting for how much rest time a team is allowed in between games,
and travel distance between games, we're also interested to get a measure of
fatigue incurred on the court.
We account for this by bringing in minutes data, and counting the number of 
times the players run back and forth on the court. This is crudely measured
by the number of changes in posession. We back out this quantity.

<<echo=6>>=

lines[, simple.date := as.character(date) %>% substr(., 1, 10) %>% as.Date]
data <- merge(lines, espn,
              by.x = c('team', 'season', 'simple.date'),
              by.y = c('team', 'season', 'date'), all.x = T)

### Estimate player fatigue, by looking at number of changes in posession.
data[, chg.pos := three.made + fg.made + free.attempted/2 + 
           to + (fg.attempted-fg.made + three.attempted - three.made - oreb)]
setkey(data, season, player, date)
data[, lag.chg.pos := shift(chg.pos), by = list(season, player)]

# Since we sum by location-date we double count.
changes <- data[, list(ttl.chg.pos = sum(chg.pos) / 2), 
            keyby = list(season, location, date)]
lines <- merge(lines, changes, by = c('season', 'location', 'date'))

setkey(lines, season, team, date)
lines[, lag.chg.pos := c(NA, lag(ttl.chg.pos)[1:.N-1]), by = list(season, team)]

@ 

To end up with a quantity that reflects the total number of changes in possession across both teams within each game.

<<echo=F>>=
lines[, list(date = simple.date, location = substr(location, 1, 7), 
             team = substr(team, 1, 7), opponent = substr(opponent, 1, 7), 
             line, score, outcome, 
             avg.age, last.game.loc, nhours.lgame, travel.dist, party, lag.chg.pos)]
@ 

\section{A significant model} 
\label{seq: significant model}
We keep things simple, and try to explain the likelihood
of meeting the spread as a function of whether a team visited a city with an active night-life
the day before.

<<echo=-4>>= 

lines[, ew := sin(travel.dir %% 360 / 360 * 2 * pi)]
#plot(lines$travel.dir, lines$ew)

m <- glm(outcome == 'W' ~ party + lag.chg.pos + travel.dist*ew + 
             nhours.lgame + I(hour(date)),
         data = lines[season < 2017], family = 'binomial',
         na.action = 'na.exclude')

summary(m)

# stargazer(m, style = 'qje', single.row = T)
@ 

The sign of our ``\texttt{party}'' variable is intuitively correct, and 
statistically significant. The magnitude is also practically significant
once we account for the units of \texttt{party} variable, i.e.
visiting a party city such as New York or LA increases number of musicians
by one or two hundred.

\section{A model worth betting on}
\paragraph{High precision model}
If we re-train an even simpler model, we obtain fantastic betting performance.

<<>>=

HOURS <- 36
m <- glm(outcome == 'W' ~ party, 
         data = lines[season < 2016 & last.game.loc != team])

### We're only interested in making predictions when teams party.
p <- predict(m, newdata = lines[season == 2016 & nhours.lgame <= HOURS & 
                                last.game.loc != team], type = 'response')

idx <- which(p < 0.476)
out <- table(lines[season == 2016 & nhours.lgame <= HOURS & last.game.loc != team][idx, outcome])

(out['L'] * 100 - 110*out['W']) %>% as.numeric

table(round(p), lines[season == 2016 & nhours.lgame <= HOURS & 
                      last.game.loc != team, outcome])

@

\paragraph{A model which realizes more games to bet on}
We can try different variants, for example, supposing the treatment effect of visiting
a city filled with musicians depends on the teams average age.

<<echo=1>>=
source('functions.r')
m <- glm(outcome == 'W' ~ party,
         data = lines[season < 2016 & last.game.loc != team])

p <- predict(m, newdata = lines[season == 2016 & nhours.lgame <= HOURS & 
                                last.game.loc != team], type = 'response')

table(round(p), lines[season == 2016 & nhours.lgame <= HOURS & 
                      last.game.loc != team, outcome])

@ 

\section{Player specific model}

Can we measure fatigue on a player specific model? Consider something like
rebounds, which by player anecdote require a lot of energy.
Does party have an effect on this outcome? We might be curious to disentangle
what other factors effect player fatigue, as these could be possible confounders
for our above analysis.

In particular, for each player, we calculate the number of rebounds per minute
earned in a game, less the players average number of rebounds per minute for that
season. We explore how this response variable can be explained as a function of
\texttt{party}, the lagged number of changes in posessions, travel distance,
and rest time since last game.

<<echo=F>>=
lines[, game.time := hour(date)]

m <- lm(demeaned.reb.per.min ~ party + lag.chg.pos + travel.dist + nhours.lgame,
   data = data[last.game.loc != team] %>% na.omit)

#stargazer(m, style = 'qje', single.row = T)
@ 

\section{Robustness Check: Replicating the analysis for MLB}
We go ahead and repeat this process for major league baseball.
The only difference here is that when we define our party variable,
we implicitly interact it with \texttt{weekend}.

<<echo=-1>>=
load(file = 'tmp_data/covers_lines_mlb.RData')
lines[, party := ifelse(team != location & weekend == 1, log(nmusicians), 0)]

m <- glm(I(team.score > opponent.score) ~ party + odds + I(team == location) + 
             ndays.lgame + travel.dist + weekend,
         data = lines, family = 'binomial')
summary(m)
# stargazer(m, style = 'qje', single.row = T)
@ 

We note that although we don't quite achieve conventional statistical significance,
we're not that far off the mark. The difference in significance between 
sports could possibly be explained by the heterogeneity in athleticism 
required to play basketball versus baseball, wherein the former requires far more 
non-stop sprinting. We also remark that the p-value on \texttt{party}
similar in magnitude to the p-value on our \texttt{home-team advantage} indicator,
which is an important feature as deemed by the literature.\cite{hometeamadv}

\paragraph{Betting on MLB}
We can also earn a profit making predictions, even after accounting for the cut
taken by the betting house.

<<echo=2:4>>= 
m <- glm(I(team.score > opponent.score) ~ party + odds,
         data = lines[year(date) < 2016], family = 'binomial')
p <- predict(m, newdata = lines[year(date) == 2016], type = 'response')

idx <- which(p < .45)
p1 <- mapply(Predict, prediction = p[idx], 
             vegas = lines[year(date) == 2016, odds][idx],
             MoreArgs=list(threshold = 0.01))
b <- mapply(Bet, our.prediction = p1,
            actual.outcome = lines[year(date) == 2016, team.score > opponent.score][idx],
            odds = lines[year(date) == 2016, odds][idx], SIMPLIFY = T)

sum(b, na.rm = T)

### 
pdf('mlb_bets.pdf')
betting.days <- lines[year(date) == 2016][idx, date]
running.prof <- cumsum(ifelse(is.na(b), 0, b))
plot(x = 1:length(b), y = running.prof, 
     main = 'Profits over the 2016 season', 
     xlab = 'Game Number', ylab = 'Profit', type = 'l')
abline(a = 0, b = 0, lty = 3)
points(x = which.min(running.prof), y = min(running.prof), type = 'p')
text(x = which.min(running.prof), y = min(running.prof), labels = min(running.prof), pos = 4)
dev.off()

### the following plot shows sufficient deviation from house odds to motivate
### an optimized betting strategy.
hist(p- lines[year(date) == 2016, odds])

tholds <- seq(.01, .1, by = .005)
tmp <- sapply(tholds, function(t) {
    p1 <- mapply(Predict, prediction = p[idx], 
                 vegas = lines[year(date) == 2016, odds][idx],
                 MoreArgs=list(threshold = t))
    b <- mapply(Bet, our.prediction = p1,
                actual.outcome = lines[year(date) == 2016, team.score > opponent.score][idx],
                odds = lines[year(date) == 2016, odds][idx], SIMPLIFY = T)
    return(c(sum(b, na.rm = T) / sum(!is.na(b)), sum(!is.na(b)))) # Avg profit per game.
})


plot(x = tholds, y = tmp[1, ], main = 'Return per game\nas a function of threshold', xlab = 'threshold', ylab = 'average profit')
text(x = tholds, y = tmp[1, ], labels = tmp[2, ], pos = 1)

    

### plot return per game as a function of difference in odds between us and vegas.

@ 

If we were to bet one hundred dollars on each game in 2016,
we would earn a profit of about \Sexpr{format(round(sum(b, na.rm=T), -1), big.mark = ',')} dollars
over the course of \Sexpr{sum(!is.na(b))} games.

\begin{thebibliography}{9}
  \bibitem{hometeamadv}
    Jeremy P. Jamieson.
    \textit{The Home Field Advantage in Athletics: A Meta-Analysis}
    \href{http://onlinelibrary.wiley.com/doi/10.1111/j.1559-1816.2010.00641.x/full}{paper}
     \end{thebibliography}

\end{document}


